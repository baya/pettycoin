#! /bin/sh

set -e

find_command()
{
    WHAT=$1
    shift

    # Return if already set.
    if [ -n "$(eval echo \$$WHAT)" ]; then
	eval echo "\$$WHAT"
	return 0
    fi
    for arg; do
	if type "$arg" > /dev/null; then
	    echo "$arg"
	    return 0
	fi
    done
    echo "Could not find \$WHAT, tried $@" >&2
    return 1
}   

# Set defaults
for arg; do
    case "$arg" in
	CC=*)
	    CC=$(echo "$arg" | cut -d= -f2-)
	    ;;
	CFLAGS=*)
	    CFLAGS=$(echo "$arg" | cut -d= -f2-)
	    ;;
	# See http://www.gnu.org/prep/standards/html_node/Configuration.html
	*)
	    echo "configure doesn't support real args yet" >&2
	    exit 1
    esac
done

CC=$(find_command CC gcc cc) || exit 1
CFLAGS=${CFLAGS:-"-g3 -ggdb -Wall -Wundef -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes -Wold-style-definition -fstack-protector"}
if VALGRIND="$(find_command VALGRIND valgrind) -q --error-exitcode=99"; then
    VALGRIND_TEST_ARGS="--track-origins=yes --leak-check=full --show-reachable=yes --suppressions=test/vg-suppressions"
else
    VALGRIND=""
    VALGRIND_TEST_ARGS=""
fi

cat > /tmp/testprog.$$.c <<EOF
#include <valgrind/memcheck.h>

int main(int argc, char *argv[])
{
	/* 0 means "true" */
	return VALGRIND_CHECK_MEM_IS_DEFINED(argv[0], 2);
}
EOF
if $CC -o /tmp/testprog.$$ /tmp/testprog.$$.c >/dev/null 2>&1 && /tmp/testprog.$$; then
    CFLAGS="$CFLAGS -DVALGRIND_HEADERS"
fi
rm -f /tmp/testprog.$$ /tmp/testprog.$$.c

echo CC is "$CC"
echo CFLAGS is "$CFLAGS"
echo VALGRIND is "$VALGRIND"
echo VALGRIND_TEST_ARGS is "$VALGRIND_TEST_ARGS"

echo Building ccan/configurator...
$CC $CFLAGS -o ccan/tools/configurator/configurator ccan/tools/configurator/configurator.c
echo Generating config.h...
ccan/tools/configurator/configurator "$CC" $CFLAGS > ccan/config.h

for f in $(find * -name Makefile.in); do
    MAKEFILE=$(echo "$f" | sed 's/.in$//')
    echo Generating $MAKEFILE
    sed -e "s,@CC@,$CC,g" -e "s,@CFLAGS@,$CFLAGS,g" -e "s,@VALGRIND@,$VALGRIND,g" -e "s,@VALGRIND_TEST_ARGS@,$VALGRIND_TEST_ARGS,g" < $f > $MAKEFILE
done

echo Configuration complete.
